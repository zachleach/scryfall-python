#!/bin/python3

# https://requests.readthedocs.io/en/latest/
# https://scryfall.com/docs/api/cards/search

# 2024.06.03, by @zachleach
import json
import pprint
import os
import sys


set_id = sys.argv[1] if len(sys.argv) > 1 else None
set_id = 'mh3'

data = []

with open(f'{set_id}.json', 'r') as file:
    data = json.load(file)

test_card = None
for card_data in data:
    if card_data['layout'] == 'saga':
        test_card = card_data
        break

'''
dict_keys(['normal', 'saga', 'prototype', 'adventure', 'transform', 'modal_dfc'])

'''

def get_frontonly(card):

    # TODO insert download logic

    return card['image_uris']['png']

def get_frontback(card):
    f = card['card_faces'][0]
    b = card['card_faces'][1]

    # TODO insert download logic

    return (f['image_uris']['png'], b['image_uris']['png'])

def get_normal(card):
    return get_frontonly(card)

def get_saga(card):
    return get_frontonly(card)

def get_prototype(card):
    return get_frontonly(card)

def get_adventure(card):
    return get_frontonly(card)

def get_transform(card):
    return get_frontback(card)

def get_modal_dfc(card):
    return get_frontback(card)

layout_functions = {
        'normal': get_normal, 
        'saga': get_saga, 
        'prototype': get_prototype, 
        'adventure': get_adventure, 
        'transform': get_transform, 
        'modal_dfc': get_modal_dfc
}

def get_png(card):
    card_layout = card['layout']
    get_func = layout_functions[card_layout]

    return get_func(card)


for card in data:
    png = get_png(card)

    break





